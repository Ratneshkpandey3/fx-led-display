---
version: "3"

services:
  db:
    image: mysql:8.0
    container_name: currency_db
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: currency_db
      MYSQL_USER: user
      MYSQL_PASSWORD: user_password
    ports:
      - "3306:3306"
    volumes:
      - ./data/rates_sample.csv:/var/lib/mysql-files/rates_sample.csv
      - ./batch-processing/sql/:/docker-entrypoint-initdb.d/
      - ./batch-processing/output:/batch-processing/output
      - ./batch-processing/output:/var/lib/mysql-files/output/
    command: --secure-file-priv=/var/lib/mysql-files
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - mynetwork

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "current_rates:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mynetwork

  flask_app:
    build:
      context: ./event_processing
      dockerfile: Dockerfile
    container_name: currency_flask_app
    ports:
      - "5001:5001"
    depends_on:
      - kafka
      - db
    networks:
      - mynetwork
    environment:
      FLASK_ENV: development

networks:
  mynetwork:
    driver: bridge
